% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compare_matrices.R
\name{calculate_enrichment_bulk}
\alias{calculate_enrichment_bulk}
\title{Calculate Pseudobulk-Enrichment for Regions}
\usage{
calculate_enrichment_bulk(
  x,
  grouping_vector,
  regions,
  maxgap = -1L,
  minoverlap = 0L,
  perm_times = NULL,
  perm_cores = 2
)
}
\arguments{
\item{x}{A sparse matrix representing data to be transformed to pseudobulk for enrichment calculation.}

\item{grouping_vector}{A vector indicating group assignments for columns in `x`.}

\item{regions}{A `GRanges`, `GRangesList`, or `data.frame` specifying the regions for enrichment analysis.
If a `GRangesList` is provided, it must be named to match entries in `grouping_vector`.}

\item{maxgap}{Integer specifying maximum gap between bins (default: -1).}

\item{minoverlap}{Integer specifying minimum overlap between bins (default: 0).}

\item{perm_times}{Integer specifying the number of permutations for permutation testing (optional).}

\item{perm_cores}{Integer specifying the number of cores for parallel computation in permutation testing (optional).}
}
\value{
A data frame with enrichment statistics, including optional permutation test results.
}
\description{
This function calculates enrichment for specified genomic regions, using either a `GRanges`,
`GRangesList`, or `data.frame` of regions, and supports optional permutation testing.
}
\note{
This quantification is done on pseudobulks; `calculate_SIMIC` and
`calculate_correlation` are single-cell based.
}
\examples{
data(zeller_H3K4me3_matrix)
data(zeller_H3K4me3_metadata)
data(zeller_H3K4me3_peaks)

enrichment_stats <- calculate_enrichment_bulk(
  x = zeller_H3K4me3_matrix,
  grouping_vector = zeller_H3K4me3_metadata,
  regions = zeller_H3K4me3_peaks)

}
